{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useEventListener.js","languages/en.js","languages/index.js","languages/ru.js","contexts/LanguageContext.jsx","utils/toClassNames.js","components/Header/Header.jsx","images/avatar.jpg","utils/styles.js","functions/makeId.js","functions/makeEmpty.js","functions/randomInt.js","components/HiddenWords/HiddenWords.jsx","functions/findLongestString.js","hooks/useWindowSize.js","hooks/useCooldownEffect.js","components/Home/Home.jsx","components/Portfolio/Portfolio.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["useLocalStorage","key","initialValue","useState","item","localStorage","JSON","parse","error","console","log","currentState","updateCurrentState","setCurrentState","useCallback","value","stringify","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useEventListener","e","newValue","languages","en","home_text","links","github","telegram","routes","main","portfolio","frontend","casProject","moviesExplorer","ru","LanguageContext","createContext","LanguageProvider","children","languageState","navigator","language","includes","currentLanguage","context","t","lang","keys","state","Provider","useLanguage","useContext","undefined","Error","toClassNames","arr","filter","Boolean","join","classNames","className","Header","setLanguage","handleLanguageClick","target","innerText","toLowerCase","exact","to","activeClassName","onClick","type","linkColor","color","characters","charactersLength","length","makeId","result","i","push","charAt","Math","floor","random","makeEmptyArray","Array","trunc","fill","randomInt","max","WORD_INDEX_SEPARATOR","MAXIMUM_BOARD_SIZE","initialBoard","width","height","makeIdMatrix","makeHiddenWords","words","longestWordLength","reduce","a","b","quantity","randomGrid","map","makeEmptyMatrix","forEach","word","wordIndex","grid","shouldMoveRight","shouldMoveDown","randomStartingWidth","randomStartingHeight","wordCharacters","split","initialVerticalCell","currentHorizontalCell","currentVerticalCell","char","currentGridLine","index","character","insertHiddenWord","replaceArrayCenter","mainArray","insertedArray","arrayToReturn","middleIndex","currentIndexOfInsertedArray","currentElementOfInsertedArray","trim","HiddenWords","size","setSize","updateSize","innerWidth","innerHeight","useLayoutEffect","useWindowSize","hiddenWords","setHiddenWords","recalculateHiddenWords","isMobile","newWidth","newHeight","mainMatrix","insertedMatrix","matrixToReturn","currentIndexOfInsertedMatrix","currentArrayOfMainMatrix","currentArrayOfInsertedMatrix","replaceMatrixCenter","reactCallback","timeout","limiter","clearTimeout","setTimeout","useCooldownEffect","onDoubleClick","row","rowIndex","column","columnIndex","id","customStyles","Home","author","name","src","avatar","alt","href","rel","style","Portfolio","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"gcAIe,SAASA,EAAgBC,EAAKC,GAC3C,MAA2CC,oBAAS,WAClD,IACE,IAAMC,EAAOC,aAAaJ,GAC1B,OAAOG,EAAOE,KAAKC,MAAMH,GAAQF,EACjC,MAAOM,GAEP,OADAC,QAAQC,IAAIF,GACLN,MANX,mBAAOS,EAAP,KAAqBC,EAArB,KAUMC,EAAkBC,uBACtB,SAACC,GACCV,aAAaJ,GAAOK,KAAKU,UAAUD,GACnCH,EAAmBG,KAErB,CAACd,IAcH,OChCa,SAA0BgB,EAAWC,GAA4B,IAAnBC,EAAkB,uDAARC,OAE/DC,EAAeC,mBAMrBC,qBAAU,WACRF,EAAaG,QAAUN,IACtB,CAACA,IAEJK,qBACE,WAIE,GADoBJ,GAAWA,EAAQM,iBACvC,CAGA,IAAMC,EAAgB,SAACC,GAAD,OAAWN,EAAaG,QAAQG,IAMtD,OAHAR,EAAQM,iBAAiBR,EAAWS,GAG7B,WACLP,EAAQS,oBAAoBX,EAAWS,OAG3C,CAACT,EAAWE,IDAdU,CAAiB,UATWf,uBAC1B,SAACgB,GACKA,EAAE7B,MAAQA,GACZW,EAAmBkB,EAAEC,SAAWzB,KAAKC,MAAMuB,EAAEC,UAAY7B,KAG7D,CAACD,EAAKC,KAKD,CAACS,EAAcE,GElCjB,ICGMmB,EAAY,CAAEC,GDHT,CAChBC,UAAW,uBACXC,MAAO,CACLC,OAAQ,OACRC,SAAU,gBAEZC,OAAQ,CACNC,KAAM,eACNC,UAAW,aAEbA,UAAW,CACTC,SAAU,YACVC,WAAY,gBACZC,eAAgB,oBCVWC,GCHb,CAChBV,UAAW,qFACXC,MAAO,CACLC,OAAQ,qBACRC,SAAU,oDAEZC,OAAQ,CACNC,KAAM,sEACNC,UAAW,0DAEbA,UAAW,CACTC,SAAU,mDACVC,WAAY,0EACZC,eAAgB,+E,OCNdE,EAAkBC,0BAEjB,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SAC3BC,EAAgBjD,EACpB,WACAkD,UAAUC,SAASC,SAAS,MAAQ,KAPhB,MAUfC,EAAP,YAA0BJ,EAA1B,MAEMK,EAAU,CACdC,EAAG,WAAa,IAAC,IAAD,EACRC,EAAOxB,EAAUqB,GADT,mBAATI,EAAS,yBAATA,EAAS,gBAEd,iBAAOD,EAAKC,EAAK,IAAIA,EAAK,WAA1B,QAAiCD,EAAKC,EAAK,KAE7CC,MAAOT,GAGT,OAAO,cAACJ,EAAgBc,SAAjB,CAA0B5C,MAAOuC,EAAjC,SAA2CN,IAG7C,SAASY,IACd,IAAMN,EAAUO,qBAAWhB,GAC3B,QAAgBiB,IAAZR,EACF,MAAM,IAAIS,MAAM,sDAElB,OAAOT,ECjCF,IAAMU,EAAe,SAACC,GAAD,OAASA,EAAIC,OAAOC,SAASC,KAAK,MAEjDC,EAAa,SAACJ,GAAD,MAAU,CAAEK,UAAWN,EAAaC,K,MCM/C,SAASM,IACtB,MAGIX,IAFFL,EADF,EACEA,EADF,gBAEEG,MAFF,GAEUP,EAFV,KAEoBqB,EAFpB,KAKA,SAASC,EAAoB3C,GAC3B0C,EAAY1C,EAAE4C,OAAOC,UAAUC,eAGjC,OACE,yBAAQN,UAAU,SAAlB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAASO,OAAK,EAACC,GAAG,IAAIR,UAAU,eAAeS,gBAAgB,sBAA/D,SACGxB,EAAE,SAAU,UAGf,oBAAIe,UAAU,qBAAd,SACE,cAAC,IAAD,CAASQ,GAAG,aAAaR,UAAU,eAAeS,gBAAgB,sBAAlE,SACGxB,EAAE,SAAU,oBAKnB,sBAAKe,UAAU,mBAAf,UACE,kDACMD,EAAW,CACb,0BACa,OAAblB,GAAqB,sCAHzB,IAKE6B,QAASP,EACTQ,KAAK,SANP,iBAUA,kDACMZ,EAAW,CACb,0BACa,OAAblB,GAAqB,sCAHzB,IAKE6B,QAASP,EACTQ,KAAK,SANP,uB,oBC3CO,MAA0B,mCCAlC,SAASC,EAAUC,GACxB,MAAO,CAAE,eAAgBA,G,YCDrBC,EAAa,uCACbC,EAAmBD,EAAWE,OAE7B,SAASC,EAAOD,GAGrB,IAFA,IAAME,EAAS,GACXC,EAAI,EACDA,EAAIH,GACTE,EAAOE,KAAKN,EAAWO,OAAOC,KAAKC,MAAMD,KAAKE,SAAWT,KACzDI,IAEF,OAAOD,ECVF,SAASO,EAAeT,GAC7B,OAAOU,MAAMJ,KAAKK,MAAMX,IAASY,OCD5B,SAASC,EAAUC,GACxB,OAAOR,KAAKC,MAAMD,KAAKE,SAAWM,G,UCW9BC,EAAuB,SACvBC,EAAqB,GAErBC,EHFC,SAAsBC,EAAOC,GAGlC,IAFA,IAAMjB,EAAS,GACXC,EAAI,EACDA,EAAIgB,GACTjB,EAAOE,KAAKH,EAAOiB,IACnBf,IAEF,OAAOD,EGLYkB,CAAaJ,EAAoBA,GA6DtD,SAASK,EAAgBC,EAAOJ,EAAOC,GACrC,IC7EgCxC,ED6E1B4C,GC7E0B5C,ED6EY2C,EC5ErC3C,EAAI6C,QAAO,SAACC,EAAGC,GAAJ,OAAWD,EAAEzB,OAAS0B,EAAE1B,OAASyB,EAAIC,IAAI,KD4ER1B,OAE7CA,EAASuB,EAAoBL,EAAQK,EAAoBL,EACzDS,EAAWJ,EAAoBJ,EAASI,EAAoBJ,EAE9DS,EF9EC,SAAyBV,EAAOC,GACrC,OAAOV,EAAeU,GAAQU,KAAI,kBAAMpB,EAAeS,ME6EtCY,CAAgB9B,EAAQ2B,GAIzC,OAHAL,EAAMS,SAAQ,SAACC,EAAMC,GACnBL,EAnEJ,SAA0BI,EAAMC,EAAWC,EAAMX,EAAmBvB,EAAQ2B,GAqB1E,IApBA,IAAMQ,EAAkB7B,KAAKE,SAAW,GAClC4B,GAAkBD,GAAmB7B,KAAKE,SAAW,GAErD6B,EACFxB,EADwBsB,EACdnC,EAASuB,EAAoB,EAC7BvB,EAAS,GAEjBsC,EACFzB,EADyBuB,EACfT,EAAWJ,EAAoB,EAC/BI,EAAW,GAEnBY,EAAiBP,EAAKQ,MAAM,IAE5BtC,EAAS,GAETuC,EAAsBH,EAExBI,EAAwBL,EACxBM,EAAsBF,EAEjBtC,EAAI,EAAGA,EAAIwB,EAAUxB,IAAK,CACjC,IAAMyC,EAAOL,EAAepC,EAAIsC,GAE1BI,EAAkBX,EAAK/B,GAE7B,GAAK0C,EAKL,GAAID,GAAQD,IAAwBxC,EAAG,CACrC,GAAIiC,EACFS,EAAgBH,GAAhB,UAA4CT,GAA5C,OAAwDlB,GAAxD,OAA+E6B,QAE/E,IAAK,IAAIE,EAAQ,EAAGA,EAAQP,EAAevC,OAAQ8C,IAAS,CAC1D,IAAMC,EAAYR,EAAeO,GACjCD,EACEH,KADF,UAEOT,GAFP,OAEmBlB,GAFnB,OAE0CgC,GAI9C7C,EAAOE,KAAKyC,GAERV,GACFO,IAEEN,GACFO,SAGFzC,EAAOE,KAAKyC,GAIhB,OAAO3C,EAWQ8C,CAAiBhB,EAAMC,EAAWL,EAAYL,EAAmBvB,EAAQ2B,MAEjFC,EAGT,SAASqB,EAAmBC,EAAWC,GACrC,IAAMC,EAAa,YAAOF,GAC1B,IAAKC,EACH,OAAOC,EAIT,IAFA,IAAMC,EAAc/C,KAAKC,MAAM6C,EAAcpD,OAAS,GAAKM,KAAKC,MAAM4C,EAAcnD,OAAS,GACzFsD,EAA8B,EACzBnD,EAAIkD,EAAalD,EAAIkD,EAAcF,EAAcnD,OAAQG,IAAK,CACrE,IAAMoD,EAAgCJ,EAAcG,GAGlDC,GACAA,EAA8Bf,MAAMzB,GAAsB,GAAGyC,SAE7DJ,EAAcjD,GAAKoD,GAErBD,IAEF,OAAOF,EAgBM,SAASK,EAAT,GAAiC,IAAVnC,EAAS,EAATA,MACpC,EE1HK,WACL,MAAwBzG,mBAAS,CAAC,EAAG,IAArC,mBAAO6I,EAAP,KAAaC,EAAb,KAEA,SAASC,IACPD,EAAQ,CAAC7H,OAAO+H,WAAY/H,OAAOgI,cAYrC,OATAC,2BAAgB,WAId,OAHAjI,OAAOK,iBAAiB,SAAUyH,GAClCA,IAEO,WACL9H,OAAOQ,oBAAoB,SAAUsH,MAEtC,IAEIF,EF0GiBM,GAAxB,mBAAO9C,EAAP,KAAcC,EAAd,KAEA,EAAsCtG,mBAASoG,GAA/C,mBAAOgD,EAAP,KAAoBC,EAApB,KAEMC,EAAyB3I,uBAAY,WACzC,IAAM4I,EAAWjD,EAASD,EACpBmD,EAAWD,EAAWlD,EAAQ,GAAKA,EAAQ,GAC3CoD,EAAYF,EAAWjD,EAAS,GAAKA,EAAS,GAKpD+C,EA1BJ,SAA6BK,EAAYC,GAIvC,IAHA,IAAMC,EAAc,YAAOF,GACrBlB,EAAc/C,KAAKC,MAAMkE,EAAezE,OAAS,GAAKM,KAAKC,MAAMiE,EAAexE,OAAS,GAC3F0E,EAA+B,EAC1BvE,EAAIkD,EAAalD,EAAIkD,EAAcmB,EAAexE,OAAQG,IAAK,CACtE,IAAMwE,EAA2BF,EAAetE,GAC1CyE,EAA+BJ,EAAeE,GACpDD,EAAetE,GAAK8C,EAAmB0B,EAA0BC,GACjEF,IAEF,OAAOD,EAiBHI,CAAoB5D,EAAcI,EAAgBC,EAJ5B+C,EAAWrD,EAAqBA,EAAqBqD,EACpDC,EAAYtD,EAAqBA,EAAqBsD,OAK9E,CAACnD,EAAQD,EAAOI,IAInB,OG7IK,SAA2BwD,GAA+B,IAAhBC,EAAe,uDAAL,IACnDC,EAAUhJ,mBAEhBC,qBAAU,WACRgJ,aAAaD,EAAQ9I,SAErB8I,EAAQ9I,QAAUgJ,WAAWJ,EAAeC,KAC3C,CAACD,EAAeC,IHoInBI,CAAkBhB,GAGhB,qBAAKnF,UAAU,cAAcoG,cAAejB,EAA5C,SACGF,EAAYpC,KAAI,SAACwD,EAAKC,GAAN,OACf,mBAAGtG,UAAU,oBAAb,SACGqG,EAAIxD,KAAI,SAAC0D,EAAQC,GAChB,GAAsB,IAAlBD,EAAOvF,OACT,OAAOuF,EAGT,MAA0BA,EAAO/C,MAAMzB,GAAvC,mBAAOkB,EAAP,KAAkBW,EAAlB,KAEA,OACE,sBACE6C,GAAE,eAAUxD,GACZjD,UAAU,2BAFZ,SAKG4D,GALH,UAGU0C,GAHV,OAGqBE,QAZWF,Q,UItIxCI,EAAe,CACnB5I,OAAQ8C,EAAU,WAClB7C,SAAU6C,EAAU,YAGP,SAAS+F,IACtB,IAAQ1H,EAAMK,IAANL,EAER,OACE,0BAASe,UAAU,OAAnB,UACE,cAAC,EAAD,CAAasC,MAAO,CAAC,UAAW,WAAYsE,IAAOC,QAEnD,qBAAKC,IAAKC,EAAQ/G,UAAU,aAAagH,IAAI,WAC7C,mBAAGhH,UAAU,aAAb,SAA2Bf,EAAE,eAC7B,sBAAKe,UAAU,gBAAf,UACE,oBACEA,UAAU,eACViH,KAAK,iCACL7G,OAAO,SACP8G,IAAI,sBACJC,MAAOT,EAAa5I,OALtB,UAOE,sBAAMkC,UAAU,oBAAhB,SACE,cAAC,IAAD,MAEF,mBAAGA,UAAU,oBAAb,SAAkCf,EAAE,QAAS,eAE/C,oBACEe,UAAU,eACViH,KAAK,uBACL7G,OAAO,SACP8G,IAAI,sBACJC,MAAOT,EAAa3I,SALtB,UAOE,sBAAMiC,UAAU,oBAAhB,SACE,cAAC,IAAD,MAEF,mBAAGA,UAAU,oBAAb,SAAkCf,EAAE,QAAS,uB,MC7CxC,SAASmI,IACtB,IAAQnI,EAAMK,IAANL,EAER,OACE,yBAASe,UAAU,YAAnB,SACE,oCACE,oBAAIA,UAAU,sBAAd,SAAqCf,EAAE,YAAa,cACpD,+BACE,6BACE,oBAAGgI,KAAK,4CAA4C7G,OAAO,SAAS8G,IAAI,aAAxE,UACGjI,EAAE,YAAa,cADlB,cAIF,6BACE,oBAAGgI,KAAK,uCAAuC7G,OAAO,SAAS8G,IAAI,aAAnE,UACGjI,EAAE,YAAa,kBADlB,sBCQGoI,MAlBf,WACE,OACE,eAAC5I,EAAD,WACE,cAAC,EAAD,IACA,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,OAAK,EAAC+G,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,eCNGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAI1Bf,M","file":"static/js/main.3dc3ee93.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useLocalStorage(key, initialValue) {\n  const [currentState, updateCurrentState] = useState(() => {\n    try {\n      const item = localStorage[key];\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setCurrentState = useCallback(\n    (value) => {\n      localStorage[key] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [key],\n  );\n\n  const localStorageChanged = useCallback(\n    (e) => {\n      if (e.key === key) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : initialValue);\n      }\n    },\n    [key, initialValue],\n  );\n\n  useEventListener('storage', localStorageChanged);\n\n  return [currentState, setCurrentState];\n}\n","import { useRef, useEffect } from 'react';\n\nexport default function useEventListener(eventName, handler, element = window) {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n}\n","export const en = {\n  home_text: 'Arthur, writes code.',\n  links: {\n    github: 'Code',\n    telegram: 'Work with me',\n  },\n  routes: {\n    main: 'Art Ginzburg',\n    portfolio: 'Portfolio',\n  },\n  portfolio: {\n    frontend: 'Front-end',\n    casProject: '3D School Map',\n    moviesExplorer: 'Movies Explorer',\n  },\n};\n","import { en } from './en';\nimport { ru } from './ru';\n\nexport const languages = { en, ru };\n","export const ru = {\n  home_text: 'Артур, пишет код.',\n  links: {\n    github: 'Код',\n    telegram: 'Телеграм',\n  },\n  routes: {\n    main: 'Арт Гинзбург',\n    portfolio: 'Портфолио',\n  },\n  portfolio: {\n    frontend: 'Фронтенд',\n    casProject: 'Карта школы в 3D',\n    moviesExplorer: 'Поиск Фильмов',\n  },\n};\n","import { createContext, useContext } from 'react';\n\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { languages } from '../languages';\n\nconst defaultLanguage = 'en';\n\nconst LanguageContext = createContext();\n\nexport function LanguageProvider({ children }) {\n  const languageState = useLocalStorage(\n    'language',\n    navigator.language.includes('ru') ? 'ru' : defaultLanguage,\n  );\n\n  const [currentLanguage] = languageState;\n\n  const context = {\n    t: (...keys) => {\n      const lang = languages[currentLanguage];\n      return lang[keys[0]][keys[1]] ?? lang[keys[0]];\n    },\n    state: languageState,\n  };\n\n  return <LanguageContext.Provider value={context}>{children}</LanguageContext.Provider>;\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","export const toClassNames = (arr) => arr.filter(Boolean).join(' ');\n\nexport const classNames = (arr) => ({ className: toClassNames(arr) });\n","import { NavLink } from 'react-router-dom';\n\nimport { useLanguage } from '../../contexts/LanguageContext';\n\nimport { classNames } from '../../utils/toClassNames';\n\nimport './Header.scss';\n\nexport default function Header() {\n  const {\n    t,\n    state: [language, setLanguage],\n  } = useLanguage();\n\n  function handleLanguageClick(e) {\n    setLanguage(e.target.innerText.toLowerCase());\n  }\n\n  return (\n    <header className=\"header\">\n      <nav className=\"header__links\">\n        <NavLink exact to=\"/\" className=\"header__logo\" activeClassName=\"header__logo_active\">\n          {t('routes', 'main')}\n        </NavLink>\n\n        <ul className=\"header__navigation\">\n          <NavLink to=\"/portfolio\" className=\"header__link\" activeClassName=\"header__link_active\">\n            {t('routes', 'portfolio')}\n          </NavLink>\n        </ul>\n      </nav>\n\n      <div className=\"header__language\">\n        <button\n          {...classNames([\n            'header__language-button',\n            language === 'en' && 'header__language-button_selected',\n          ])}\n          onClick={handleLanguageClick}\n          type=\"button\"\n        >\n          EN\n        </button>\n        <button\n          {...classNames([\n            'header__language-button',\n            language === 'ru' && 'header__language-button_selected',\n          ])}\n          onClick={handleLanguageClick}\n          type=\"button\"\n        >\n          RU\n        </button>\n      </div>\n    </header>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/avatar.665f1a88.jpg\";","export function linkColor(color) {\n  return { '--link-color': color };\n}\n","const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\nconst charactersLength = characters.length;\n\nexport function makeId(length) {\n  const result = [];\n  let i = 0;\n  while (i < length) {\n    result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n    i++;\n  }\n  return result;\n}\n\nexport function makeIdMatrix(width, height) {\n  const result = [];\n  let i = 0;\n  while (i < height) {\n    result.push(makeId(width));\n    i++;\n  }\n  return result;\n}\n","export function makeEmptyArray(length) {\n  return Array(Math.trunc(length)).fill();\n}\n\nexport function makeEmptyMatrix(width, height) {\n  return makeEmptyArray(height).map(() => makeEmptyArray(width));\n}\n","export function randomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n","import { useCallback, useState } from 'react';\n\nimport { makeIdMatrix } from '../../functions/makeId';\nimport { makeEmptyMatrix } from '../../functions/makeEmpty';\nimport { findLongestString } from '../../functions/findLongestString';\nimport { randomInt } from '../../functions/randomInt';\n\nimport { useCooldownEffect } from '../../hooks/useCooldownEffect';\nimport { useWindowSize } from '../../hooks/useWindowSize';\n\nimport './HiddenWords.scss';\n\nconst WORD_INDEX_SEPARATOR = '禕';\nconst MAXIMUM_BOARD_SIZE = 30;\n\nconst initialBoard = makeIdMatrix(MAXIMUM_BOARD_SIZE, MAXIMUM_BOARD_SIZE);\n\nfunction insertHiddenWord(word, wordIndex, grid, longestWordLength, length, quantity) {\n  const shouldMoveRight = Math.random() > 0.5;\n  const shouldMoveDown = !shouldMoveRight || Math.random() > 0.5;\n\n  const randomStartingWidth = shouldMoveRight\n    ? randomInt(length - longestWordLength + 1)\n    : randomInt(length - 1);\n\n  const randomStartingHeight = shouldMoveDown\n    ? randomInt(quantity - longestWordLength + 1)\n    : randomInt(quantity - 1);\n\n  const wordCharacters = word.split('');\n\n  const result = [];\n\n  const initialVerticalCell = randomStartingHeight;\n\n  let currentHorizontalCell = randomStartingWidth;\n  let currentVerticalCell = initialVerticalCell;\n\n  for (let i = 0; i < quantity; i++) {\n    const char = wordCharacters[i - initialVerticalCell];\n\n    const currentGridLine = grid[i];\n\n    if (!currentGridLine) {\n      // TODO: currentGridLine sometimes gets `undefined` here on small screens — and last character of a long word gets clipped. Really strange, shouldn't happen.\n      continue;\n    }\n\n    if (char && currentVerticalCell === i) {\n      if (shouldMoveDown) {\n        currentGridLine[currentHorizontalCell] = `${wordIndex}${WORD_INDEX_SEPARATOR}${char}`;\n      } else {\n        for (let index = 0; index < wordCharacters.length; index++) {\n          const character = wordCharacters[index];\n          currentGridLine[\n            currentHorizontalCell++\n          ] = `${wordIndex}${WORD_INDEX_SEPARATOR}${character}`;\n        }\n      }\n\n      result.push(currentGridLine);\n\n      if (shouldMoveRight) {\n        currentHorizontalCell++;\n      }\n      if (shouldMoveDown) {\n        currentVerticalCell++;\n      }\n    } else {\n      result.push(currentGridLine);\n    }\n  }\n\n  return result;\n}\n\nfunction makeHiddenWords(words, width, height) {\n  const longestWordLength = findLongestString(words).length;\n\n  const length = longestWordLength > width ? longestWordLength : width;\n  const quantity = longestWordLength > height ? longestWordLength : height;\n\n  let randomGrid = makeEmptyMatrix(length, quantity);\n  words.forEach((word, wordIndex) => {\n    randomGrid = insertHiddenWord(word, wordIndex, randomGrid, longestWordLength, length, quantity);\n  });\n  return randomGrid;\n}\n\nfunction replaceArrayCenter(mainArray, insertedArray) {\n  const arrayToReturn = [...mainArray];\n  if (!insertedArray) {\n    return arrayToReturn;\n  }\n  const middleIndex = Math.floor(arrayToReturn.length / 2) - Math.floor(insertedArray.length / 2);\n  let currentIndexOfInsertedArray = 0;\n  for (let i = middleIndex; i < middleIndex + insertedArray.length; i++) {\n    const currentElementOfInsertedArray = insertedArray[currentIndexOfInsertedArray];\n\n    if (\n      currentElementOfInsertedArray &&\n      currentElementOfInsertedArray.split(WORD_INDEX_SEPARATOR)[1].trim()\n    ) {\n      arrayToReturn[i] = currentElementOfInsertedArray;\n    }\n    currentIndexOfInsertedArray++;\n  }\n  return arrayToReturn;\n}\n\nfunction replaceMatrixCenter(mainMatrix, insertedMatrix) {\n  const matrixToReturn = [...mainMatrix];\n  const middleIndex = Math.floor(matrixToReturn.length / 2) - Math.floor(insertedMatrix.length / 2);\n  let currentIndexOfInsertedMatrix = 0;\n  for (let i = middleIndex; i < middleIndex + insertedMatrix.length; i++) {\n    const currentArrayOfMainMatrix = matrixToReturn[i];\n    const currentArrayOfInsertedMatrix = insertedMatrix[currentIndexOfInsertedMatrix];\n    matrixToReturn[i] = replaceArrayCenter(currentArrayOfMainMatrix, currentArrayOfInsertedMatrix);\n    currentIndexOfInsertedMatrix++;\n  }\n  return matrixToReturn;\n}\n\nexport default function HiddenWords({ words }) {\n  const [width, height] = useWindowSize();\n\n  const [hiddenWords, setHiddenWords] = useState(initialBoard);\n\n  const recalculateHiddenWords = useCallback(() => {\n    const isMobile = height > width;\n    const newWidth = isMobile ? width / 40 : width / 60;\n    const newHeight = isMobile ? height / 52 : height / 85;\n\n    const controlledWidth = newWidth > MAXIMUM_BOARD_SIZE ? MAXIMUM_BOARD_SIZE : newWidth;\n    const controlledHeight = newHeight > MAXIMUM_BOARD_SIZE ? MAXIMUM_BOARD_SIZE : newHeight;\n\n    setHiddenWords(\n      replaceMatrixCenter(initialBoard, makeHiddenWords(words, controlledWidth, controlledHeight)),\n    );\n  }, [height, width, words]);\n\n  useCooldownEffect(recalculateHiddenWords);\n\n  return (\n    <div className=\"hiddenWords\" onDoubleClick={recalculateHiddenWords}>\n      {hiddenWords.map((row, rowIndex) => (\n        <p className=\"hiddenWords__char\" key={rowIndex}>\n          {row.map((column, columnIndex) => {\n            if (column.length === 1) {\n              return column;\n            }\n\n            const [wordIndex, char] = column.split(WORD_INDEX_SEPARATOR);\n\n            return (\n              <span\n                id={`char-${wordIndex}`}\n                className=\"hiddenWords__char-active\"\n                key={`${rowIndex}${columnIndex}`}\n              >\n                {char}\n              </span>\n            );\n          })}\n        </p>\n      ))}\n    </div>\n  );\n}\n","export function findLongestString(arr) {\n  return arr.reduce((a, b) => (a.length > b.length ? a : b), '');\n}\n","import { useLayoutEffect, useState } from 'react';\n\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n\n  function updateSize() {\n    setSize([window.innerWidth, window.innerHeight]);\n  }\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', updateSize);\n    updateSize();\n\n    return () => {\n      window.removeEventListener('resize', updateSize);\n    };\n  }, []);\n\n  return size;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useCooldownEffect(reactCallback, timeout = 200) {\n  const limiter = useRef();\n\n  useEffect(() => {\n    clearTimeout(limiter.current);\n\n    limiter.current = setTimeout(reactCallback, timeout);\n  }, [reactCallback, timeout]);\n}\n","import { FaGithub, FaTelegramPlane } from 'react-icons/fa';\n\nimport { author } from '../../../package.json';\nimport { useLanguage } from '../../contexts/LanguageContext';\n\nimport avatar from '../../images/avatar.jpg';\nimport { linkColor } from '../../utils/styles';\n\nimport HiddenWords from '../HiddenWords/HiddenWords';\n\nimport './Home.scss';\n\nconst customStyles = {\n  github: linkColor('#83278f'), // 6e5494\n  telegram: linkColor('#28aaea'), // 0088cc\n};\n\nexport default function Home() {\n  const { t } = useLanguage();\n\n  return (\n    <section className=\"home\">\n      <HiddenWords words={['develop', 'software', author.name]} />\n\n      <img src={avatar} className=\"home__logo\" alt=\"avatar\" />\n      <p className=\"home__text\">{t('home_text')}</p>\n      <nav className=\"home__buttons\">\n        <a\n          className=\"home__button\"\n          href=\"https://github.com/artginzburg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={customStyles.github}\n        >\n          <span className=\"home__button-icon\">\n            <FaGithub />\n          </span>\n          <p className=\"home__button-text\">{t('links', 'github')}</p>\n        </a>\n        <a\n          className=\"home__button\"\n          href=\"https://t.me/ginzart\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={customStyles.telegram}\n        >\n          <span className=\"home__button-icon\">\n            <FaTelegramPlane />\n          </span>\n          <p className=\"home__button-text\">{t('links', 'telegram')}</p>\n        </a>\n      </nav>\n    </section>\n  );\n}\n","import { useLanguage } from '../../contexts/LanguageContext';\n\nimport './Portfolio.scss';\n\nexport default function Portfolio() {\n  const { t } = useLanguage();\n\n  return (\n    <section className=\"portfolio\">\n      <article>\n        <h2 className=\"portfolio__subtitle\">{t('portfolio', 'frontend')}</h2>\n        <ul>\n          <li>\n            <a href=\"https://artginzburg.github.io/CASProject/\" target=\"_blank\" rel=\"noreferrer\">\n              {t('portfolio', 'casProject')}, 2019\n            </a>\n          </li>\n          <li>\n            <a href=\"https://deeplomka.nomoredomains.club\" target=\"_blank\" rel=\"noreferrer\">\n              {t('portfolio', 'moviesExplorer')}, 2021\n            </a>\n          </li>\n        </ul>\n      </article>\n    </section>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\n\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Portfolio from './components/Portfolio/Portfolio';\n\nimport { LanguageProvider } from './contexts/LanguageContext';\n\nfunction App() {\n  return (\n    <LanguageProvider>\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n        </Switch>\n      </main>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function to log results (for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}