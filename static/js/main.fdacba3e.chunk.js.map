{"version":3,"sources":["images/avatar.jpg","components/Home/Home.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","makeHiddenWords","words","longestWordLength","sort","a","b","randomGrid","quantity","push","makeIdMultiple","forEach","word","wordCharacters","split","randomGridReplaced","char","currentGridLine","className","map","gridElement","index","Home","src","avatar","alt","href","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,MAA0B,mC,eCOzC,SAASA,EAAOC,GAId,IAHA,IAAIC,EAAS,GACPC,EAAa,uCACbC,EAAmBD,EAAWF,OAC3BI,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,EAWT,SAASQ,EAAgBC,GACvB,IAAMC,EAAoBD,EAAME,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEd,OAASa,EAAEb,UAAQ,GAAGA,OACnEe,EAVN,SAAwBf,EAAQgB,GAE9B,IADA,IAAIf,EAAS,GACJG,EAAI,EAAGA,EAAIY,EAAUZ,IAC5BH,EAAOgB,KAAKlB,EAAOC,IAErB,OAAOC,EAKUiB,CAAeP,EAAmBA,GAyBnD,OAxBAD,EAAMS,SAAQ,SAACC,GACb,IAAMC,EAAiBD,EAAKE,MAAM,IAG5BC,EAAqB,GAE3BF,EAAeF,SAAQ,SAACK,EAAMpB,GAC5B,IAAIqB,EAAkBV,EAAWX,GAAGkB,MAAM,IAC1CG,EAAgBrB,GACd,sBAAcsB,UAAU,2BAAxB,SACGF,GADQpB,GAIbmB,EAAmBN,KACjB,mBAAWS,UAAU,oBAArB,SACGD,EAAgBE,KAAI,SAACC,EAAaC,GAAd,OACI,IAAvBD,EAAY5B,OAAe,cAAC,WAAD,UAAuB4B,GAARC,GAAkCD,MAFxExB,OAQZW,EAAaQ,KAERR,EAGM,SAASe,IACtB,OACE,0BAASJ,UAAU,OAAnB,UAeE,qBAAKA,UAAU,cAAf,SAA8BjB,EAAgB,CAAC,cAE/C,qBAAKsB,IAAKC,EAAQN,UAAU,aAAaO,IAAI,WAC7C,uGACA,sBAAKP,UAAU,gBAAf,UACE,oBACEA,UAAU,eACVQ,KAAK,iCACLC,OAAO,SACPC,IAAI,sBAJN,UAME,sBAAMV,UAAU,oBAAhB,SACE,cAAC,IAAD,MAEF,mBAAGA,UAAU,oBAAb,mCAEF,oBACEA,UAAU,eACVQ,KAAK,uBACLC,OAAO,SACPC,IAAI,sBAJN,UAME,sBAAMV,UAAU,oBAAhB,SACE,cAAC,IAAD,MAEF,mBAAGA,UAAU,oBAAb,uECvFKW,MARf,WACE,OACE,+BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,K","file":"static/js/main.fdacba3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.665f1a88.jpg\";","import { Fragment } from 'react';\nimport { FaGithub, FaTelegramPlane } from 'react-icons/fa';\n\nimport avatar from '../../images/avatar.jpg';\n\nimport './Home.scss';\n\nfunction makeId(length) {\n  let result = '';\n  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction makeIdMultiple(length, quantity) {\n  let result = [];\n  for (let i = 0; i < quantity; i++) {\n    result.push(makeId(length));\n  }\n  return result;\n}\n\nfunction makeHiddenWords(words) {\n  const longestWordLength = words.sort((a, b) => b.length - a.length)[0].length;\n  var randomGrid = makeIdMultiple(longestWordLength, longestWordLength);\n  words.forEach((word) => {\n    const wordCharacters = word.split('');\n    // const displayMethod = Math.random > 0.8 ? 'diagonal' : Math.random() > 0.5 ? 'horizontal' : 'vertical';\n\n    const randomGridReplaced = [];\n\n    wordCharacters.forEach((char, i) => {\n      let currentGridLine = randomGrid[i].split('');\n      currentGridLine[i] = (\n        <span key={i} className=\"hiddenWords__char-active\">\n          {char}\n        </span>\n      );\n      randomGridReplaced.push(\n        <p key={i} className=\"hiddenWords__char\">\n          {currentGridLine.map((gridElement, index) =>\n            gridElement.length === 1 ? <Fragment key={index}>{gridElement}</Fragment> : gridElement,\n          )}\n        </p>,\n      );\n    });\n\n    randomGrid = randomGridReplaced;\n  });\n  return randomGrid;\n}\n\nexport default function Home() {\n  return (\n    <section className=\"home\">\n      {/* <svg className=\"svgFilter\">\n          <filter id=\"noise\">\n            <feTurbulence id=\"turbulence\">\n              <animate\n                attributeName=\"baseFrequency\"\n                dur=\"1s\"\n                values=\"0.9 0.9; 0.8 0.8; 0.9 0.9;\"\n                repeatCount=\"indefinite\"\n              />\n              <feDisplacementMap in=\"SourceGraphic\" scale=\"60\" />\n            </feTurbulence>\n          </filter>\n        </svg>\n        <div className=\"backgroundNoise\" /> */}\n      <div className=\"hiddenWords\">{makeHiddenWords(['develop'])}</div>\n\n      <img src={avatar} className=\"home__logo\" alt=\"avatar\" />\n      <p>Я Арт, пишу код</p>\n      <nav className=\"home__buttons\">\n        <a\n          className=\"home__button\"\n          href=\"https://github.com/artginzburg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span className=\"home__button-icon\">\n            <FaGithub />\n          </span>\n          <p className=\"home__button-text\">Код</p>\n        </a>\n        <a\n          className=\"home__button\"\n          href=\"https://t.me/ginzart\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span className=\"home__button-icon\">\n            <FaTelegramPlane />\n          </span>\n          <p className=\"home__button-text\">Телеграм</p>\n        </a>\n      </nav>\n    </section>\n  );\n}\n","import Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <main>\n      <Home />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function to log results (for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}